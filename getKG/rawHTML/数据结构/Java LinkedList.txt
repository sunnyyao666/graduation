<div class="article-intro" id="content">
			
			<h1>Java LinkedList</h1>
<p><a href="java-collections.html"><img class="navup" src="/images/up.gif" alt="Java 集合框架"> Java 集合框架</a></p>
<h2>Java LinkedList</h2>
<p>链表（Linked list）是一种常见的基础数据结构，是一种线性表，但是并不会按线性的顺序存储数据，而是在每一个节点里存到下一个节点的地址。</p><p>
链表可分为单向链表和双向链表。</p>
<p>一个单向链表包含两个值: 当前节点的值和一个指向下一个节点的链接。</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2020/06/408px-Singly-linked-list.svg_.png"></p>

<p>一个双向链表有三个整数值: 数值、向后的节点链接、向前的节点链接。</p>

<p><img src="https://www.runoob.com/wp-content/uploads/2020/06/610px-Doubly-linked-list.svg_.png"></p>
<p>Java LinkedList（链表） 类似于 ArrayList，是一种常用的数据容器。</p>


<p>与 ArrayList 相比，LinkedList 的增加和删除的操作效率更高，而查找和修改的操作效率较低。</p>
<p>

<strong>以下情况使用 ArrayList :</strong></p>
<ul>
<li>
频繁访问列表中的某一个元素。</li><li>
只需要在列表末尾进行添加和删除元素操作。</li></ul>
<p><strong>以下情况使用 LinkedList :</strong></p>
<ul>
<li>
你需要通过循环迭代来访问列表中的某些元素。</li><li>
需要频繁的在列表开头、中间、末尾等位置进行添加和删除元素操作。</li></ul>
<p>LinkedList 继承了 AbstractSequentialList 类。</p><p>
LinkedList 实现了 Queue 接口，可作为队列使用。</p><p>
LinkedList 实现了 List 接口，可进行列表的相关操作。</p><p>
LinkedList 实现了 Deque 接口，可作为队列使用。</p><p>
LinkedList 实现了 Cloneable 接口，可实现克隆。</p><p>
LinkedList 实现了 java.io.Serializable 接口，即可支持序列化，能通过序列化去传输。</p><p>
<img src="https://www.runoob.com/wp-content/uploads/2020/06/linkedlist-2020-11-16.png"></p>



<p>
LinkedList 类位于 java.util 包中，使用前需要引入它，语法格式如下：</p>

<pre>
// 引入 LinkedList 类
import java.util.LinkedList; 

LinkedList&lt;E&gt; list = new LinkedList&lt;E&gt;();   // 普通创建方法
或者
LinkedList&lt;E&gt; list = new LinkedList(Collection&lt;? extends E&gt; c); // 使用集合创建链表</pre>

<h3>实例</h3>
<p>在列表开头添加元素：</p>

<div class="example"><h2 class="example">实例</h2> <div class="example_code">
<span style="color: #666666; font-style: italic;">// 引入 LinkedList 类</span><br>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.LinkedList</span><span style="color: #339933;">;</span><br>
<br>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> RunoobTest <span style="color: #009900;">{</span><br>
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">(</span><span style="color: #003399;">String</span><span style="color: #009900;">[</span><span style="color: #009900;">]</span> args<span style="color: #009900;">)</span> <span style="color: #009900;">{</span><br>
        LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span> sites <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Google"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Runoob"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Taobao"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        <span style="color: #666666; font-style: italic;">// 使用 addFirst() 在头部添加元素</span><br>
        sites.<span style="color: #006633;">addFirst</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Wiki"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">(</span>sites<span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
    <span style="color: #009900;">}</span><br>
<span style="color: #009900;">}</span><br>
</div></div>
<p>以上实例，执行输出结果为：</p>
<pre>[Wiki, Google, Runoob, Taobao]</pre>
<p>在列表结尾添加元素：</p>
<div class="example"><h2 class="example">实例</h2> <div class="example_code">
<span style="color: #666666; font-style: italic;">// 引入 LinkedList 类</span><br>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.LinkedList</span><span style="color: #339933;">;</span><br>
<br>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> RunoobTest <span style="color: #009900;">{</span><br>
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">(</span><span style="color: #003399;">String</span><span style="color: #009900;">[</span><span style="color: #009900;">]</span> args<span style="color: #009900;">)</span> <span style="color: #009900;">{</span><br>
        LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span> sites <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Google"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Runoob"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Taobao"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        <span style="color: #666666; font-style: italic;">// 使用 addLast() 在尾部添加元素</span><br>
        sites.<span style="color: #006633;">addLast</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Wiki"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">(</span>sites<span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
    <span style="color: #009900;">}</span><br>
<span style="color: #009900;">}</span><br>
</div></div>
<p>以上实例，执行输出结果为：</p>
<pre>[Google, Runoob, Taobao, Wiki]</pre>
<h3>实例</h3>
<p>在列表开头移除元素：</p>
<div class="example"><h2 class="example">实例</h2> <div class="example_code">
<span style="color: #666666; font-style: italic;">// 引入 LinkedList 类</span><br>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.LinkedList</span><span style="color: #339933;">;</span><br>
<br>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> RunoobTest <span style="color: #009900;">{</span><br>
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">(</span><span style="color: #003399;">String</span><span style="color: #009900;">[</span><span style="color: #009900;">]</span> args<span style="color: #009900;">)</span> <span style="color: #009900;">{</span><br>
        LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span> sites <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Google"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Runoob"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Taobao"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Weibo"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        <span style="color: #666666; font-style: italic;">// 使用 removeFirst() 移除头部元素</span><br>
        sites.<span style="color: #006633;">removeFirst</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">(</span>sites<span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
    <span style="color: #009900;">}</span><br>
<span style="color: #009900;">}</span><br>
</div></div>
<p>以上实例，执行输出结果为：</p>
<pre>[Runoob, Taobao, Weibo]</pre>
<p>在列表结尾移除元素：</p>
<div class="example"><h2 class="example">实例</h2> <div class="example_code">
<span style="color: #666666; font-style: italic;">// 引入 LinkedList 类</span><br>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.LinkedList</span><span style="color: #339933;">;</span><br>
<br>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> RunoobTest <span style="color: #009900;">{</span><br>
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">(</span><span style="color: #003399;">String</span><span style="color: #009900;">[</span><span style="color: #009900;">]</span> args<span style="color: #009900;">)</span> <span style="color: #009900;">{</span><br>
        LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span> sites <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Google"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Runoob"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Taobao"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Weibo"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        <span style="color: #666666; font-style: italic;">// 使用 removeLast() 移除尾部元素</span><br>
        sites.<span style="color: #006633;">removeLast</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">(</span>sites<span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
    <span style="color: #009900;">}</span><br>
<span style="color: #009900;">}</span><br>
</div></div>
<p>以上实例，执行输出结果为：</p>
<pre>[Google, Runoob, Taobao]</pre>
<h3>实例</h3>
<p>获取列表开头的元素：</p>
<div class="example"><h2 class="example">实例</h2> <div class="example_code">
<span style="color: #666666; font-style: italic;">// 引入 LinkedList 类</span><br>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.LinkedList</span><span style="color: #339933;">;</span><br>
<br>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> RunoobTest <span style="color: #009900;">{</span><br>
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">(</span><span style="color: #003399;">String</span><span style="color: #009900;">[</span><span style="color: #009900;">]</span> args<span style="color: #009900;">)</span> <span style="color: #009900;">{</span><br>
        LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span> sites <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Google"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Runoob"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Taobao"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Weibo"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        <span style="color: #666666; font-style: italic;">// 使用 getFirst() 获取头部元素</span><br>
        <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">(</span>sites.<span style="color: #006633;">getFirst</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
    <span style="color: #009900;">}</span><br>
<span style="color: #009900;">}</span><br>
</div></div>
<p>以上实例，执行输出结果为：</p>
<pre>Google</pre>
<p>获取列表结尾的元素：</p>

<div class="example"><h2 class="example">实例</h2> <div class="example_code">
<span style="color: #666666; font-style: italic;">// 引入 LinkedList 类</span><br>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.LinkedList</span><span style="color: #339933;">;</span><br>
<br>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> RunoobTest <span style="color: #009900;">{</span><br>
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">(</span><span style="color: #003399;">String</span><span style="color: #009900;">[</span><span style="color: #009900;">]</span> args<span style="color: #009900;">)</span> <span style="color: #009900;">{</span><br>
        LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span> sites <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Google"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Runoob"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Taobao"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Weibo"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        <span style="color: #666666; font-style: italic;">// 使用 getLast() 获取尾部元素</span><br>
        <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">(</span>sites.<span style="color: #006633;">getLast</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
    <span style="color: #009900;">}</span><br>
<span style="color: #009900;">}</span><br>
</div></div>
<p>以上实例，执行输出结果为：</p>
<pre>Weibo</pre>
<h3>实例</h3>
<p>我们可以使用 for 配合 size() 方法来迭代列表中的元素：</p>
<div class="example"><h2 class="example">实例</h2> <div class="example_code">
<span style="color: #666666; font-style: italic;">// 引入 LinkedList 类</span><br>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.LinkedList</span><span style="color: #339933;">;</span><br>
<br>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> RunoobTest <span style="color: #009900;">{</span><br>
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">(</span><span style="color: #003399;">String</span><span style="color: #009900;">[</span><span style="color: #009900;">]</span> args<span style="color: #009900;">)</span> <span style="color: #009900;">{</span><br>
        LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span> sites <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Google"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Runoob"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Taobao"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Weibo"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        <span style="color: #000000; font-weight: bold;">for</span> <span style="color: #009900;">(</span><span style="color: #000066; font-weight: bold;">int</span> size <span style="color: #339933;">=</span> sites.<span style="color: #006633;">size</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span>, i <span style="color: #339933;">=</span> <span style="color: #cc66cc;">0</span><span style="color: #339933;">;</span> i <span style="color: #339933;">&lt;</span> size<span style="color: #339933;">;</span> i<span style="color: #339933;">++</span><span style="color: #009900;">)</span> <span style="color: #009900;">{</span><br>
            <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">(</span>sites.<span style="color: #006633;">get</span><span style="color: #009900;">(</span>i<span style="color: #009900;">)</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        <span style="color: #009900;">}</span><br>
    <span style="color: #009900;">}</span><br>
<span style="color: #009900;">}</span><br>
</div></div>
<p>size() 方法用于计算链表的大小。</p>
<p>以上实例，执行输出结果为：</p>
<pre>Google
Runoob
Taobao
Weibo</pre>


<p>也可以使用 for-each 来迭代元素：</p>

<div class="example"><h2 class="example">实例</h2> <div class="example_code">
<span style="color: #666666; font-style: italic;">// 引入 LinkedList 类</span><br>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.LinkedList</span><span style="color: #339933;">;</span><br>
<br>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> RunoobTest <span style="color: #009900;">{</span><br>
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">(</span><span style="color: #003399;">String</span><span style="color: #009900;">[</span><span style="color: #009900;">]</span> args<span style="color: #009900;">)</span> <span style="color: #009900;">{</span><br>
        LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span> sites <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> LinkedList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Google"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Runoob"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Taobao"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        sites.<span style="color: #006633;">add</span><span style="color: #009900;">(</span><span style="color: #0000ff;">"Weibo"</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        <span style="color: #000000; font-weight: bold;">for</span> <span style="color: #009900;">(</span><span style="color: #003399;">String</span> i <span style="color: #339933;">:</span> sites<span style="color: #009900;">)</span> <span style="color: #009900;">{</span><br>
            <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">(</span>i<span style="color: #009900;">)</span><span style="color: #339933;">;</span><br>
        <span style="color: #009900;">}</span><br>
    <span style="color: #009900;">}</span><br>
<span style="color: #009900;">}</span><br>
</div></div>
<p>以上实例，执行输出结果为：</p>

<pre>Google
Runoob
Taobao
Weibo</pre>

			</div>